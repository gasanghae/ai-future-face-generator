import { GoogleGenAI, Modality } from '@google/genai';\n\nexport default async function handler(req: any, res: any) {\n  if (req.method !== 'POST') {\n    res.status(405).json({ error: 'Method Not Allowed' });\n    return;\n  }\n\n  try {\n    const apiKey = process.env.GEMINI_API_KEY || process.env.API_KEY;\n    if (!apiKey) {\n      res.status(500).json({ error: 'GEMINI_API_KEY is not set' });\n      return;\n    }\n\n    const { imageBase64, mimeType, gender } = req.body || {};\n    if (!imageBase64 || !mimeType || !gender) {\n      res.status(400).json({ error: 'imageBase64, mimeType, gender are required' });\n      return;\n    }\n\n    const ai = new GoogleGenAI({ apiKey });\n\n    const professions = [\n      '운동선수', '의사', '교사', '아이돌', '만화가', '경찰', '요리사', \n      '변호사', 'IT전문가', '군인', '디자이너', '간호사', '사업가'\n    ];\n\n    const genderPrompt = gender === 'male' ? '20대 남자' : '20대 여자';\n    const basePrompt = '아이의 20대 모습, 아시아, 한국인, 아이폰으로 찍은 것 같은 사실적인 사진';\n    const randomProfession = professions[Math.floor(Math.random() * professions.length)];\n    const finalPrompt = ${genderPrompt}, , ;\n\n    const response = await ai.models.generateContent({\n      model: 'gemini-2.5-flash-image-preview',\n      contents: {\n        parts: [\n          {\n            inlineData: {\n              data: imageBase64,\n              mimeType: mimeType,\n            },\n          },\n          {\n            text: finalPrompt,\n          },\n        ],\n      },\n      config: {\n        responseModalities: [Modality.IMAGE, Modality.TEXT],\n      },\n    });\n\n    for (const part of response.candidates?.[0]?.content?.parts || []) {\n      if (part.inlineData) {\n        const generatedBase64 = part.inlineData.data;\n        const generatedMimeType = part.inlineData.mimeType;\n        res.status(200).json({ dataUrl: data:;base64, });\n        return;\n      }\n    }\n\n    res.status(502).json({ error: 'AI가 이미지를 생성하지 못했습니다. 다른 사진으로 시도해보세요.' });\n  } catch (error) {\n    console.error('Error generating image (api):', error);\n    res.status(500).json({ error: '이미지 생성 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.' });\n  }\n}\n
